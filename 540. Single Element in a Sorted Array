1) 1st approach is xoring all elements and the one which is not repeated will be left T : O(N)
2) 2nd is using Binary search T : O(logn)
class Solution {
    public int singleNonDuplicate(int[] nums) {
        int start=0;
        int end=nums.length-1;
        
        while(start<=end){
            if(start==end){
                return nums[start];
            }
            int mid=(start+end)/2;   
            if(mid%2==0){
                if(nums[mid]==nums[mid+1]){
                    start=mid+2;
                }else{
                    end=mid;
                }
            }
            else if(mid%2!=0){
                if(nums[mid]==nums[mid-1]){
                    start=mid+1;
                }else{
                    end=mid-1;
                }
            }
        }
        return -1;
    }
}
