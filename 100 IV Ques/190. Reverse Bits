public class Solution {
    // you need treat n as an unsigned value
    public int reverseBits(int n) {
//         String num=Integer.toBinaryString(n);
//         StringBuilder sb=new StringBuilder();
//         if(num.length()<32){
//             for(int i=0;i<(32-num.length());i++){
//                 sb.append(0);
//             }
//         }
        
//         sb.append(num);
//         //System.out.println(sb.toString());
//         if(num.charAt(num.length()-1)=='1'){
//             sb=sb.replace(num.length()-1, num.length(), "0");
//         }
//         //System.out.println(sb.toString());
//         int ans=Integer.parseInt(sb.reverse().toString(),2);
//         System.out.println(Integer.toBinaryString(ans));
//         if(num.charAt(num.length()-1)=='1'){
//             //ans=ans|1;
//             System.out.println(Integer.toBinaryString(ans));
//         }
//         return ans;
//         //return Integer.parseInt(sb.reverse().toString(),2);
//         //System.out.println(sb.reverse());
//         //return 0;
        
        int res=0;
        int bit=0;
        for(int i=0;i<32;i++){
            bit=(n>>i)&1;
            res=res|(bit<<(31-i));
        }
        return res;
    }
}
