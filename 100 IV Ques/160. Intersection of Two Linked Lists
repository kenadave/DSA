/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode getIntersectionNode(ListNode headA, ListNode headB) {
        ListNode n1=headA;
        ListNode n2=headB;
        Set<ListNode> st=new HashSet<>();
        while(n1!=null){
            st.add(n1);
            n1=n1.next;
        }
        while(n2!=null){
            if(st.contains(n2))return n2;
            n2=n2.next;
        }
        // while(null!=n1 || null!=n2){
        //     if(n1!=null && n2!=null && n1.next==n2.next){
        //         return n1.next;                
        //     }
        //     if(n1!=null){
        //         System.out.println(n1.val);
        //         n1=n1.next;
        //     }
        //     if(n2!=null){
        //         System.out.println(n2.val);
        //         n2=n2.next;
        //     }
        // }
        return null;
    }
}
