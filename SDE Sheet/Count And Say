import java.util.* ;
import java.io.*; 
public class Solution 
{
    public static String writeAsYouSpeak(int n) 
    {
        // Write your code here.
        
        //get count of each character. map of each character and its count
        //iterate map and append in sb like count and then that character
        //String init="1";
        String firstString="1";
        if(n==1){
            return firstString;
        }
//         if(n==2){
//             return firstString;
//         }
        for(int i=2;i<=n;i++){
            //1 - 11
            //2 - 21
            //init+count//11
            //1 , 11, 21,1211
            firstString=getCount(firstString);//11 21
            //sb.append(count+init);//21
            //mp.put(init,count);//1,1
        }
        
        
        return firstString;
    }
    
    public static String getCount(String str){
         //1211
        //System.out.println(str);
        StringBuilder sb=new StringBuilder();
        //1&2 diff so lst.add(data(1,1))
        //2&1 diff so lst.add(data(2,1))
        //1&1 same so lst.add(data(1,2))
        int count=1;
        List<Data> lst=new LinkedList<>();
        Map<Integer,Integer> mp=new HashMap<>();
        for(int i=0;i<str.length();i++){//i=0,1 11121 11 , 0,1 ,len=2, so if i+1=2
//             if(mp.containsKey(str.charAt(i)) && (i+1)<str.length() && str.charAt(i)==str.charAt(i+1)){
//                 mp.put(str.charAt(i),mp.get(str.charAt(i))+1);
//             }else if(!mp.containsKey(str.charAt(i))){
//                 mp.put(str.charAt(i),1);
//             }else if(mp.containsKey(str.charAt(i)) && (i+1)<str.length() && str.charAt(i)!=str.charAt(i+1)){
//                 sb.append(dd.f);
//                 sb.append(dd.ch);
//             }//1121
            if( (i+1)<str.length() && str.charAt(i)==str.charAt(i+1)){//1121 0,1
                count++;//2
            }else{
                Data d=new Data(str.charAt(i),count);
                lst.add(d);
                count=1;
            }
        }
        
        //System.out.println(lst);
        for(Data dd:lst){
            sb.append(dd.f);
            sb.append(dd.ch);
        }
        return sb.toString();
    }
}

class Data{
    Character ch;
    int f;
    Data(Character ch,int f){
        this.ch=ch;
        this.f=f;
    }
    
    @Override
    public String toString(){
        return (this.ch+"f:"+this.f);
    }
}
