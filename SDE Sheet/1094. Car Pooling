class Solution {
    public boolean carPooling(int[][] trips, int capacity) {
        // int[] arr1=trips[0];
        // int[] arr2=trips[1];
        // if(arr1[0]<=capacity){
        //     int newCap=capacity-arr1[0];
        //     System.out.println(arr2[1]);
        //     System.out.println(arr1[2]);
        //     System.out.println(arr2[0]);
        //     System.out.println(newCap);
        //     if(arr2[1]<arr1[2]&&arr2[0]<=newCap){
        //         return true;
        //     }else if(arr2[1]==arr1[2]){
        //         return true;
        //     }
        // }
        // return false;

        Map<Integer,Integer> mp=new TreeMap<>();
        for(int[] trip:trips){
            mp.put(trip[1],mp.getOrDefault(trip[1],0)+trip[0]);
            mp.put(trip[2],mp.getOrDefault(trip[2],0)-trip[0]);
        }
        for(int v:mp.values()){
            capacity=capacity-v;
            if(capacity<0){
                return false;
            }
            
        }
        return true;
    }
}
